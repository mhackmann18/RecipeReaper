version: '1'

services:
  db:
    image: mysql:8.0
    ports:
      - 127.0.0.1:3306:3306
    volumes:
      - recipereaper-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_password
      MYSQL_DATABASE: recipes
    secrets:
      - db_password
    networks:
      - recipereaper

  scraper:
    image: recipereaper-scraper
    build:
      context: ./scraper
      dockerfile: Dockerfile.dev
    ports:
      - 127.0.0.1:8000:8000
    networks:
      - recipereaper

  api:
    image: recipereaper-api
    ports:
      - 127.0.0.1:8080:8080
    volumes:
      - ./api/app:/app/app
    networks:
      - recipereaper
    build: 
      context: ./api
      dockerfile: Dockerfile.dev
    environment:
      PORT: 8080
      CORS_ORIGIN: http://localhost:3000
      JWT_SECRET_FILE: /run/secrets/jwt_secret
      ACCESS_TOKEN_EXPIRES_IN: 3600
      NODE_ENV: development
      MYSQL_HOST: db
      MYSQL_PORT: 3306
      MYSQL_USER: root
      MYSQL_PASSWORD_FILE: /run/secrets/db_password
      MYSQL_DB: recipes
      ADMIN_USERNAME: god_of_prepmaster
    secrets:
      - jwt_secret
      - db_password
    depends_on:
      - db
    # command: ["./wait-for-it.sh", "db:3306", "--strict", "--", "npm", "start"]

  site:
    image: recipereaper-site
    ports: 
      - 127.0.0.1:3000:3000
    volumes: 
      - ./site/src:/app/src
    networks: 
      - recipereaper
    build: 
      context: ./site
      dockerfile: Dockerfile.dev
    environment:
      REACT_APP_DOMAIN: localhost
      REACT_APP_API_ORIGIN: http://localhost:8080
      REACT_APP_SCRAPER_ORIGIN: http://localhost:8000

networks:
  recipereaper:

secrets:
  db_password:
    file: db_password.txt
  jwt_secret:
    file: jwt_secret.txt

volumes:
  recipereaper-data:
